// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: chanchunk/v1/chanchunk.proto

package chanchunkv1

import (
	v1 "github.com/arya-analytics/aryacore/pkg/rpc/gen/proto/go/error/v1"
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChannelChunkReplica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" model:"role:pk"`
	ChannelChunkId string `protobuf:"bytes,2,opt,name=channel_chunk_id,json=channelChunkId,proto3" json:"channel_chunk_id,omitempty"`
	RangeReplicaId string `protobuf:"bytes,3,opt,name=range_replica_id,json=rangeReplicaId,proto3" json:"range_replica_id,omitempty"`
	Telem          []byte `protobuf:"bytes,4,opt,name=telem,proto3" json:"telem,omitempty" model:"role:telemChunkData"`
}

func (x *ChannelChunkReplica) Reset() {
	*x = ChannelChunkReplica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelChunkReplica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelChunkReplica) ProtoMessage() {}

func (x *ChannelChunkReplica) ProtoReflect() protoreflect.Message {
	mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelChunkReplica.ProtoReflect.Descriptor instead.
func (*ChannelChunkReplica) Descriptor() ([]byte, []int) {
	return file_chanchunk_v1_chanchunk_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelChunkReplica) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChannelChunkReplica) GetChannelChunkId() string {
	if x != nil {
		return x.ChannelChunkId
	}
	return ""
}

func (x *ChannelChunkReplica) GetRangeReplicaId() string {
	if x != nil {
		return x.RangeReplicaId
	}
	return ""
}

func (x *ChannelChunkReplica) GetTelem() []byte {
	if x != nil {
		return x.Telem
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelChunkReplica *ChannelChunkReplica `protobuf:"bytes,1,opt,name=channel_chunk_replica,json=channelChunkReplica,proto3" json:"channel_chunk_replica,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_chanchunk_v1_chanchunk_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRequest) GetChannelChunkReplica() *ChannelChunkReplica {
	if x != nil {
		return x.ChannelChunkReplica
	}
	return nil
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *v1.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_chanchunk_v1_chanchunk_proto_rawDescGZIP(), []int{2}
}

func (x *CreateResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type RetrieveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelChunkReplica *ChannelChunkReplica `protobuf:"bytes,1,opt,name=channel_chunk_replica,json=channelChunkReplica,proto3" json:"channel_chunk_replica,omitempty"`
}

func (x *RetrieveResponse) Reset() {
	*x = RetrieveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveResponse) ProtoMessage() {}

func (x *RetrieveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveResponse.ProtoReflect.Descriptor instead.
func (*RetrieveResponse) Descriptor() ([]byte, []int) {
	return file_chanchunk_v1_chanchunk_proto_rawDescGZIP(), []int{3}
}

func (x *RetrieveResponse) GetChannelChunkReplica() *ChannelChunkReplica {
	if x != nil {
		return x.ChannelChunkReplica
	}
	return nil
}

type RetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkc []string `protobuf:"bytes,1,rep,name=pkc,proto3" json:"pkc,omitempty"`
}

func (x *RetrieveRequest) Reset() {
	*x = RetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveRequest) ProtoMessage() {}

func (x *RetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveRequest.ProtoReflect.Descriptor instead.
func (*RetrieveRequest) Descriptor() ([]byte, []int) {
	return file_chanchunk_v1_chanchunk_proto_rawDescGZIP(), []int{4}
}

func (x *RetrieveRequest) GetPkc() []string {
	if x != nil {
		return x.Pkc
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkc []string `protobuf:"bytes,1,rep,name=pkc,proto3" json:"pkc,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_chanchunk_v1_chanchunk_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRequest) GetPkc() []string {
	if x != nil {
		return x.Pkc
	}
	return nil
}

type DeleteREsponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *v1.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteREsponse) Reset() {
	*x = DeleteREsponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteREsponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteREsponse) ProtoMessage() {}

func (x *DeleteREsponse) ProtoReflect() protoreflect.Message {
	mi := &file_chanchunk_v1_chanchunk_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteREsponse.ProtoReflect.Descriptor instead.
func (*DeleteREsponse) Descriptor() ([]byte, []int) {
	return file_chanchunk_v1_chanchunk_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteREsponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_chanchunk_v1_chanchunk_proto protoreflect.FileDescriptor

var file_chanchunk_v1_chanchunk_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12,
	0x25, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0x9a, 0x84, 0x9e,
	0x03, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x3a, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x3a, 0x70, 0x6b,
	0x2c, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x21, 0x9a, 0x84, 0x9e, 0x03, 0x1c,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x3a, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x3a, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x2c, 0x22, 0x52, 0x05, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x22, 0x66, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x22, 0x37, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x69, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x13, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x22,
	0x23, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6b, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x6b, 0x63, 0x22, 0x21, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6b, 0x63, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x70, 0x6b, 0x63, 0x22, 0x37, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x45, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x32, 0xee, 0x01, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12,
	0x4b, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x45, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0xca, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x55, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x79, 0x61, 0x2d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x2f, 0x61, 0x72, 0x79, 0x61, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x2f, 0x76, 0x31, 0x3b, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0d, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chanchunk_v1_chanchunk_proto_rawDescOnce sync.Once
	file_chanchunk_v1_chanchunk_proto_rawDescData = file_chanchunk_v1_chanchunk_proto_rawDesc
)

func file_chanchunk_v1_chanchunk_proto_rawDescGZIP() []byte {
	file_chanchunk_v1_chanchunk_proto_rawDescOnce.Do(func() {
		file_chanchunk_v1_chanchunk_proto_rawDescData = protoimpl.X.CompressGZIP(file_chanchunk_v1_chanchunk_proto_rawDescData)
	})
	return file_chanchunk_v1_chanchunk_proto_rawDescData
}

var file_chanchunk_v1_chanchunk_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_chanchunk_v1_chanchunk_proto_goTypes = []interface{}{
	(*ChannelChunkReplica)(nil), // 0: chanchunk.v1.ChannelChunkReplica
	(*CreateRequest)(nil),       // 1: chanchunk.v1.CreateRequest
	(*CreateResponse)(nil),      // 2: chanchunk.v1.CreateResponse
	(*RetrieveResponse)(nil),    // 3: chanchunk.v1.RetrieveResponse
	(*RetrieveRequest)(nil),     // 4: chanchunk.v1.RetrieveRequest
	(*DeleteRequest)(nil),       // 5: chanchunk.v1.DeleteRequest
	(*DeleteREsponse)(nil),      // 6: chanchunk.v1.DeleteREsponse
	(*v1.Error)(nil),            // 7: error.v1.Error
}
var file_chanchunk_v1_chanchunk_proto_depIdxs = []int32{
	0, // 0: chanchunk.v1.CreateRequest.channel_chunk_replica:type_name -> chanchunk.v1.ChannelChunkReplica
	7, // 1: chanchunk.v1.CreateResponse.error:type_name -> error.v1.Error
	0, // 2: chanchunk.v1.RetrieveResponse.channel_chunk_replica:type_name -> chanchunk.v1.ChannelChunkReplica
	7, // 3: chanchunk.v1.DeleteREsponse.error:type_name -> error.v1.Error
	1, // 4: chanchunk.v1.ChannelChunkService.Create:input_type -> chanchunk.v1.CreateRequest
	4, // 5: chanchunk.v1.ChannelChunkService.Retrieve:input_type -> chanchunk.v1.RetrieveRequest
	5, // 6: chanchunk.v1.ChannelChunkService.Delete:input_type -> chanchunk.v1.DeleteRequest
	2, // 7: chanchunk.v1.ChannelChunkService.Create:output_type -> chanchunk.v1.CreateResponse
	3, // 8: chanchunk.v1.ChannelChunkService.Retrieve:output_type -> chanchunk.v1.RetrieveResponse
	6, // 9: chanchunk.v1.ChannelChunkService.Delete:output_type -> chanchunk.v1.DeleteREsponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_chanchunk_v1_chanchunk_proto_init() }
func file_chanchunk_v1_chanchunk_proto_init() {
	if File_chanchunk_v1_chanchunk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chanchunk_v1_chanchunk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelChunkReplica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chanchunk_v1_chanchunk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chanchunk_v1_chanchunk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chanchunk_v1_chanchunk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chanchunk_v1_chanchunk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chanchunk_v1_chanchunk_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chanchunk_v1_chanchunk_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteREsponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chanchunk_v1_chanchunk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chanchunk_v1_chanchunk_proto_goTypes,
		DependencyIndexes: file_chanchunk_v1_chanchunk_proto_depIdxs,
		MessageInfos:      file_chanchunk_v1_chanchunk_proto_msgTypes,
	}.Build()
	File_chanchunk_v1_chanchunk_proto = out.File
	file_chanchunk_v1_chanchunk_proto_rawDesc = nil
	file_chanchunk_v1_chanchunk_proto_goTypes = nil
	file_chanchunk_v1_chanchunk_proto_depIdxs = nil
}
