// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package bulktelemv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BulkTelemServiceClient is the client API for BulkTelemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BulkTelemServiceClient interface {
	Create(ctx context.Context, opts ...grpc.CallOption) (BulkTelemService_CreateClient, error)
	Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (BulkTelemService_RetrieveClient, error)
}

type bulkTelemServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBulkTelemServiceClient(cc grpc.ClientConnInterface) BulkTelemServiceClient {
	return &bulkTelemServiceClient{cc}
}

func (c *bulkTelemServiceClient) Create(ctx context.Context, opts ...grpc.CallOption) (BulkTelemService_CreateClient, error) {
	stream, err := c.cc.NewStream(ctx, &BulkTelemService_ServiceDesc.Streams[0], "/bulktelem.v1.BulkTelemService/Create", opts...)
	if err != nil {
		return nil, err
	}
	x := &bulkTelemServiceCreateClient{stream}
	return x, nil
}

type BulkTelemService_CreateClient interface {
	Send(*CreateRequest) error
	Recv() (*CreateResponse, error)
	grpc.ClientStream
}

type bulkTelemServiceCreateClient struct {
	grpc.ClientStream
}

func (x *bulkTelemServiceCreateClient) Send(m *CreateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bulkTelemServiceCreateClient) Recv() (*CreateResponse, error) {
	m := new(CreateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bulkTelemServiceClient) Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (BulkTelemService_RetrieveClient, error) {
	stream, err := c.cc.NewStream(ctx, &BulkTelemService_ServiceDesc.Streams[1], "/bulktelem.v1.BulkTelemService/Retrieve", opts...)
	if err != nil {
		return nil, err
	}
	x := &bulkTelemServiceRetrieveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BulkTelemService_RetrieveClient interface {
	Recv() (*RetrieveResponse, error)
	grpc.ClientStream
}

type bulkTelemServiceRetrieveClient struct {
	grpc.ClientStream
}

func (x *bulkTelemServiceRetrieveClient) Recv() (*RetrieveResponse, error) {
	m := new(RetrieveResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BulkTelemServiceServer is the server API for BulkTelemService service.
// All implementations should embed UnimplementedBulkTelemServiceServer
// for forward compatibility
type BulkTelemServiceServer interface {
	Create(BulkTelemService_CreateServer) error
	Retrieve(*RetrieveRequest, BulkTelemService_RetrieveServer) error
}

// UnimplementedBulkTelemServiceServer should be embedded to have forward compatible implementations.
type UnimplementedBulkTelemServiceServer struct {
}

func (UnimplementedBulkTelemServiceServer) Create(BulkTelemService_CreateServer) error {
	return status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedBulkTelemServiceServer) Retrieve(*RetrieveRequest, BulkTelemService_RetrieveServer) error {
	return status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}

// UnsafeBulkTelemServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BulkTelemServiceServer will
// result in compilation errors.
type UnsafeBulkTelemServiceServer interface {
	mustEmbedUnimplementedBulkTelemServiceServer()
}

func RegisterBulkTelemServiceServer(s grpc.ServiceRegistrar, srv BulkTelemServiceServer) {
	s.RegisterService(&BulkTelemService_ServiceDesc, srv)
}

func _BulkTelemService_Create_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BulkTelemServiceServer).Create(&bulkTelemServiceCreateServer{stream})
}

type BulkTelemService_CreateServer interface {
	Send(*CreateResponse) error
	Recv() (*CreateRequest, error)
	grpc.ServerStream
}

type bulkTelemServiceCreateServer struct {
	grpc.ServerStream
}

func (x *bulkTelemServiceCreateServer) Send(m *CreateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bulkTelemServiceCreateServer) Recv() (*CreateRequest, error) {
	m := new(CreateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BulkTelemService_Retrieve_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RetrieveRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BulkTelemServiceServer).Retrieve(m, &bulkTelemServiceRetrieveServer{stream})
}

type BulkTelemService_RetrieveServer interface {
	Send(*RetrieveResponse) error
	grpc.ServerStream
}

type bulkTelemServiceRetrieveServer struct {
	grpc.ServerStream
}

func (x *bulkTelemServiceRetrieveServer) Send(m *RetrieveResponse) error {
	return x.ServerStream.SendMsg(m)
}

// BulkTelemService_ServiceDesc is the grpc.ServiceDesc for BulkTelemService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BulkTelemService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bulktelem.v1.BulkTelemService",
	HandlerType: (*BulkTelemServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Create",
			Handler:       _BulkTelemService_Create_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Retrieve",
			Handler:       _BulkTelemService_Retrieve_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bulktelem/v1/bulktelem.proto",
}
